"use strict";

var express = require('express');
var body_parser_1 = require('body-parser');
var user_controller_1 = require("./user-controller");
//noinspection TypeScriptValidateTypes
var router = express.Router().use(body_parser_1.json());
router.route('/').get(function (req, res) {
    res.json({ message: 'Return all users' });
    res.end();
}).post(function (req, res) {
    return user_controller_1.UserController.create(req, res);
});
router.route('/:userId').get(function (req, res) {
    return user_controller_1.UserController.findById(req, res);
}).put(function (req, res) {
    return user_controller_1.UserController.update(req, res);
}).delete(function (req, res) {
    res.json({ message: 'delete user' });
    res.end();
});
router.route('/email/exists/:email').get(function (req, res) {
    return user_controller_1.UserController.emailExists(req, res);
});
module.exports = router;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci9hcGkvdXNlci9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQSxJQUFPLFVBQU8sUUFBVyxTQUFYLENBQWQ7QUFDQSxJQUFBLGdCQUFBLFFBQW1CLGFBQW5CLENBQUE7QUFDQSxJQUFBLG9CQUFBLFFBQTZCLG1CQUE3QixDQUFBO0FBRUE7QUFDQSxJQUFJLFNBQVMsUUFBUSxNQUFSLEdBQ1YsR0FEVSxDQUNOLGNBQUEsSUFBQSxFQURNLENBQWI7QUFHQSxPQUFPLEtBQVAsQ0FBYSxHQUFiLEVBQ0csR0FESCxDQUNPLFVBQVUsR0FBVixFQUFlLEdBQWYsRUFBa0I7QUFDckIsUUFBSSxJQUFKLENBQVMsRUFBQyxTQUFTLGtCQUFWLEVBQVQ7QUFDQSxRQUFJLEdBQUo7QUFDRCxDQUpILEVBS0csSUFMSCxDQUtRLFVBQUMsR0FBRCxFQUFNLEdBQU4sRUFBUztBQUFLLFdBQUEsa0JBQUEsY0FBQSxDQUFlLE1BQWYsQ0FBc0IsR0FBdEIsRUFBMkIsR0FBM0IsQ0FBQTtBQUErQixDQUxyRDtBQU9BLE9BQU8sS0FBUCxDQUFhLFVBQWIsRUFDRyxHQURILENBQ1EsVUFBQyxHQUFELEVBQU0sR0FBTixFQUFTO0FBQUssV0FBQSxrQkFBQSxjQUFBLENBQWUsUUFBZixDQUF3QixHQUF4QixFQUE2QixHQUE3QixDQUFBO0FBQWlDLENBRHZELEVBRUcsR0FGSCxDQUVRLFVBQUMsR0FBRCxFQUFNLEdBQU4sRUFBUztBQUFLLFdBQUEsa0JBQUEsY0FBQSxDQUFlLE1BQWYsQ0FBc0IsR0FBdEIsRUFBMkIsR0FBM0IsQ0FBQTtBQUErQixDQUZyRCxFQUdHLE1BSEgsQ0FHVSxVQUFVLEdBQVYsRUFBZSxHQUFmLEVBQWtCO0FBQ3hCLFFBQUksSUFBSixDQUFTLEVBQUMsU0FBUyxhQUFWLEVBQVQ7QUFDQSxRQUFJLEdBQUo7QUFDRCxDQU5IO0FBUUEsT0FBTyxLQUFQLENBQWEsc0JBQWIsRUFDRyxHQURILENBQ1EsVUFBQyxHQUFELEVBQU0sR0FBTixFQUFTO0FBQUssV0FBQSxrQkFBQSxjQUFBLENBQWUsV0FBZixDQUEyQixHQUEzQixFQUFnQyxHQUFoQyxDQUFBO0FBQW9DLENBRDFEO0FBS0EsT0FBTyxPQUFQLEdBQWlCLE1BQWpCIiwiZmlsZSI6InNlcnZlci9hcGkvdXNlci9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuaW1wb3J0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5pbXBvcnQge2pzb259IGZyb20gJ2JvZHktcGFyc2VyJztcbmltcG9ydCB7VXNlckNvbnRyb2xsZXJ9IGZyb20gXCIuL3VzZXItY29udHJvbGxlclwiXG5cbi8vbm9pbnNwZWN0aW9uIFR5cGVTY3JpcHRWYWxpZGF0ZVR5cGVzXG52YXIgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKVxuICAudXNlKGpzb24oKSk7XG5cbnJvdXRlci5yb3V0ZSgnLycpXG4gIC5nZXQoZnVuY3Rpb24gKHJlcSwgcmVzKSB7XG4gICAgcmVzLmpzb24oe21lc3NhZ2U6ICdSZXR1cm4gYWxsIHVzZXJzJ30pO1xuICAgIHJlcy5lbmQoKTtcbiAgfSlcbiAgLnBvc3QoKHJlcSwgcmVzKSA9PiBVc2VyQ29udHJvbGxlci5jcmVhdGUocmVxLCByZXMpKTtcblxucm91dGVyLnJvdXRlKCcvOnVzZXJJZCcpXG4gIC5nZXQoIChyZXEsIHJlcykgPT4gVXNlckNvbnRyb2xsZXIuZmluZEJ5SWQocmVxLCByZXMpIClcbiAgLnB1dCggKHJlcSwgcmVzKSA9PiBVc2VyQ29udHJvbGxlci51cGRhdGUocmVxLCByZXMpIClcbiAgLmRlbGV0ZShmdW5jdGlvbiAocmVxLCByZXMpIHtcbiAgICByZXMuanNvbih7bWVzc2FnZTogJ2RlbGV0ZSB1c2VyJ30pO1xuICAgIHJlcy5lbmQoKTtcbiAgfSlcbjtcbnJvdXRlci5yb3V0ZSgnL2VtYWlsL2V4aXN0cy86ZW1haWwnKVxuICAuZ2V0KCAocmVxLCByZXMpID0+IFVzZXJDb250cm9sbGVyLmVtYWlsRXhpc3RzKHJlcSwgcmVzKSApXG47XG5cblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
